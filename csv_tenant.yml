---

- hosts: localhost
  gather_facts: no 
  connection: local
  tags: [CSV]
  vars:
    spreadsheet: '{{ playbook_dir }}/template.xls'  
    dest: '{{ playbook_dir }}/'

  tasks:
    - name: Create CSV from XLS
      xls_to_csv:
        src: '{{ spreadsheet }}' 
        dest: '{{ dest }}' 
        sheets: 
          - 'TENANT'
          #- 'APP_PROFILE'
          #- 'L3'
          #- 'EPG'
          #- 'ATTACHIFCE'
          #- 'VRF'
        warn: True

    - debug:
        msg: 'File {{ dest }}{{ item }}.csv has been created'
      loop: '{{ sheet_filenames }}'

- hosts: localhost
  gather_facts: no
  tags: [CSV]

  tasks:
    - name: Export Tenant Info
      csv_to_facts:
        src: '{{ playbook_dir }}/{{ item }}.csv'
      register: mycsvinfooutput
      with_items:
        - 'TENANT'
      #  - 'APP_PROFILE'
       # - 'L3'
       # - 'EPG'
       # - 'ATTACHIFCE'
       # - 'VRF'
    # - debug:
    #     msg:
    #       - "{{ hostvars['localhost'] }}"
    #       - "{{ hostvars['localhost']['mycsvinfooutput'] }}"

- name: "Configure ACI Tenant part"
  hosts: apic
  gather_facts: no 
  connection: local
  serial: 1
  vars:
    mycsvinfo: "{{ hostvars['localhost']['mycsvinfooutput'] }}"
    tenant: "{{ mycsvinfo.results[0]['ansible_facts']['spreadsheet'] }}"
    #appprofile: "{{ mycsvinfo.results[1]['ansible_facts']['spreadsheet'] }}"
    #l3: "{{ mycsvinfo.results[2]['ansible_facts']['spreadsheet'] }}"
    #epg: "{{ mycsvinfo.results[3]['ansible_facts']['spreadsheet'] }}"
    #attachifce: "{{ mycsvinfo.results[4]['ansible_facts']['spreadsheet'] }}"
    #vrf: "{{ mycsvinfo.results[5]['ansible_facts']['spreadsheet'] }}"

  #Use a prompt to set username, password and the input file
  vars_prompt:
  - name: username
    prompt: "Enter APIC username"
    private: no
  - name: password
    prompt: "Enter APIC password"
    private: yes

  tasks:
    - name: Create ACI Tenant
      aci_tenant:
        host: '{{ ansible_host }}'
        username: '{{ username}}' 
        password: '{{ password }}'
       # private_key: '{{ playbook_dir }}/admin.key'
       # certificate_name: 'admin'
        tenant: '{{ item.TENANT }}'
        description: '{{ item.DESCRIPTION }}'
        state: 'present'
        validate_certs: 'no'
      tags: tenant
      loop: '{{ tenant }}'

    
